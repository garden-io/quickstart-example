kind: Build
name: vote
type: container
description: Build the vote UI

---
kind: Deploy
name: vote
type: kubernetes
description: Deploy the vote UI
environments: [local, remote]
dependencies:
  - build.vote
  - deploy.api
  - deploy.result
  - deploy.worker

variables:
  hostname: 'vote.${var.baseHostname}'

spec:
  manifestFiles: [./manifests/*]

  # This tells Garden what "target" to use for logs, code syncing and more
  defaultTarget:
    kind: Deployment
    name: vote

  sync:
    paths:
      - sourcePath: src
        containerPath: /app/src
        mode: one-way-replica
        exclude: [node_modules]
    overrides:
      - args: [npm, run, dev]

  # Here we override the default manifest values. This allows us to e.g. set the correct container image version
  patchResources:
    - kind: Deployment
      name: vote
      patch:
        spec:
          template:
            spec:
              containers:
                - name: vote
                  image: ${actions.build.vote.outputs.deploymentImageId}
                  env:
                    - name: HOSTNAME
                      value: ${var.hostname}
                    - name: VITE_USERNAME
                      value: ${local.username}
              imagePullSecrets:
                - name: ${var.imagePullSecretName || 'regcred'}
    # We also override the Ingress resouce to dynamically set the hostname
    - name: vote
      kind: Ingress
      patch:
        spec:
          ingressClassName: nginx
          rules:
            - host: ${var.hostname}
              http:
                paths:
                  - backend:
                      service:
                        name: vote
                        port:
                          number: 80
                    path: /
                    pathType: Prefix

---
kind: Test
name: unit-vote
type: container
dependencies: [build.vote]

spec:
  image: ${actions.build.vote.outputs.deploymentImageId}
  args: [npm, run, test:unit]

# E2E Runner configs
---
kind: Build
name: e2e-runner
type: container

---
kind: Test
name: e2e-vote
type: container
dependencies: [build.e2e-runner, deploy.vote]

spec:
  image: ${actions.build.e2e-runner.outputs.deploymentImageId}
  args: [npm, run, test:e2e]
